name: CI

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    test:
        runs-on: ${{ matrix.os }}
        timeout-minutes: 30
        strategy:
            matrix:
                os: [ubuntu-latest]
                python-version: [3.7, 3.8]
        steps:
            - uses: actions/checkout@v2
            - name: Cache conda
              uses: actions/cache@v1
              env:
                  # Increase this value to reset cache
                  CACHE_NUMBER: 0
              with:
                  path: ~/conda_pkgs_dir
                  key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}
            - name: Install miniconda and python version ${{ matrix.python-version }}
              uses: conda-incubator/setup-miniconda@v2
              with:
                  python-version: ${{ matrix.python-version }}
                  channels: conda-forge
                  channel-priority: strict
                  use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
            - name: Install SSH Key
              uses: webfactory/ssh-agent@v0.5.3
              with:
                  ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
            - name: Install Bootleg
              shell: bash -l {0}
              run: |
                  make dev
                  pip install -q pytest-cov
            - name: Run preliminary checks
              shell: bash -l {0}
              run: |
                  isort --version
                  black --version
                  flake8 --version
                  make check
                  make docs
            - name: Test with pytest
              shell: bash -l {0}
              run: |
                  pytest --cov=./ --cov-report=xml
            - name: Upload to codecov.io
              uses: codecov/codecov-action@v1
              with:
                  file: ./coverage.xml
                  flags: unittests
                  name: codecov-umbrella
                  fail_ci_if_error: true
    build-and-publish:
        name: Build and Publish Bootleg to PyPI
        runs-on: ubuntu-latest
        needs: test
        strategy:
            matrix:
                python-version: [3.8]
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v1
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Build Bootleg
              run: |
                  pip install -U setuptools wheel pip
                  python setup.py sdist bdist_wheel
            - name: Publish distribution ðŸ“¦ to PyPI
              if: startsWith(github.event.ref, 'refs/tags')
              uses: pypa/gh-action-pypi-publish@master
              with:
                  password: ${{ secrets.pypi_password }}
